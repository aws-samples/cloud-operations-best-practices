"use strict";(globalThis.webpackChunkaws_cloud_operations_best_practices=globalThis.webpackChunkaws_cloud_operations_best_practices||[]).push([[5761],{5892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"solutions/AWS CloudTrail/automating-cloudtrail-log-management","title":"Automating CloudTrail Log Management using Amazon Athena","description":"A guide to automating AWS CloudTrail log analysis using partitioned Athena tables for optimized performance, cost reduction, and enhanced security investigations.","source":"@site/docs/solutions/AWS CloudTrail/automating-cloudtrail-log-management.mdx","sourceDirName":"solutions/AWS CloudTrail","slug":"/solutions/AWS CloudTrail/automating-cloudtrail-log-management","permalink":"/cloud-operations-best-practices/docs/solutions/AWS CloudTrail/automating-cloudtrail-log-management","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Automating CloudTrail Log Management using Amazon Athena","description":"A guide to automating AWS CloudTrail log analysis using partitioned Athena tables for optimized performance, cost reduction, and enhanced security investigations."},"sidebar":"tutorialSidebar","previous":{"title":"AWS CloudTrail","permalink":"/cloud-operations-best-practices/docs/solutions/AWS CloudTrail/"},"next":{"title":"Application Operations","permalink":"/cloud-operations-best-practices/docs/solutions/application-operations/"}}');var a=n(4848),o=n(8453);const s={sidebar_position:1,title:"Automating CloudTrail Log Management using Amazon Athena",description:"A guide to automating AWS CloudTrail log analysis using partitioned Athena tables for optimized performance, cost reduction, and enhanced security investigations."},r="Automating CloudTrail Log Management using Amazon Athena",l={},c=[{value:"Configure Partitioned Athena Tables for CloudTrail Logs",id:"configure-partitioned-athena-tables-for-cloudtrail-logs",level:2},{value:"Use Account-Specific and Consolidated Tables for Flexible Analysis",id:"use-account-specific-and-consolidated-tables-for-flexible-analysis",level:2},{value:"Enable Daily Table Updates for Synchronization",id:"enable-daily-table-updates-for-synchronization",level:2},{value:"Leverage Predefined Queries for Common Use Cases",id:"leverage-predefined-queries-for-common-use-cases",level:2},{value:"Optimize Costs with Partitioning and Monitoring",id:"optimize-costs-with-partitioning-and-monitoring",level:2},{value:"Clean Up Resources to Avoid Unnecessary Costs",id:"clean-up-resources-to-avoid-unnecessary-costs",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"automating-cloudtrail-log-management-using-amazon-athena",children:"Automating CloudTrail Log Management using Amazon Athena"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.p,{children:"AWS CloudTrail provides comprehensive monitoring and logging of account activity across your AWS infrastructure, capturing API calls and events for auditing, compliance, and security investigations. However, as AWS environments scale, particularly in multi-account organizations, the volume of CloudTrail logs can grow significantly, leading to increased query times and costs when analyzing logs in Amazon Athena. To address this, we recommend automating the creation and management of partitioned Athena tables to optimize query performance and reduce costs. This best practice guide outlines how to implement an automated solution using AWS Lambda and Amazon Athena to partition CloudTrail logs by account, region, and date, enabling efficient log analysis for security, compliance, and operational use cases."}),"\n",(0,a.jsx)(t.h2,{id:"configure-partitioned-athena-tables-for-cloudtrail-logs",children:"Configure Partitioned Athena Tables for CloudTrail Logs"}),"\n",(0,a.jsx)(t.p,{children:"To optimize query performance and reduce costs, configure partitioned Athena tables for CloudTrail logs using an automated solution. This approach involves deploying two AWS Lambda functions to create and maintain account-specific and organization-wide Athena tables, partitioned by account ID, region, and date. Partitioning ensures that Athena scans only relevant data during queries, significantly improving query speed and reducing costs compared to scanning unpartitioned datasets. For example, when investigating suspicious activity for a specific AWS account within a defined time frame, Athena will scan only the relevant partitions, rather than the entire log dataset."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://github.com/aws-samples/sample-automation-cloudtrail-athena",children:"Deploy this CloudFormation Template for Automation"})}),": Use this CloudFormation template to deploy the solution, which includes two Lambda functions, IAM roles, an AWS Glue database, and predefined Athena queries. The template automates the setup of partitioned tables, eliminating manual configuration and ensuring consistency across environments. GitHub solution can be found ",(0,a.jsx)(t.a,{href:"https://github.com/aws-samples/sample-automation-cloudtrail-athena",children:"here"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/athena/latest/ug/create-cloudtrail-table-partition-projection.html",children:"CloudTrail logs in Athena using partition projection"})}),": This solution uses Athena projection partitioning which, due to CloudTrail logs having a known structure with predefined partition schemes, allows you to reduce query runtime and automate partition management by using the Athena partition projection feature. Partition projection automatically adds new partitions as new data is added. This removes the need for you to manually add partitions by using ",(0,a.jsx)(t.code,{children:"ALTER TABLE ADD PARTITION"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning-s3bucketprefix.html",children:"Specify CloudTrail S3 Bucket and Prefix"})}),": Provide the CloudTrail S3 bucket name and the appropriate prefix as inputs to the CloudFormation template. For organizational trails, the prefix follows the format ",(0,a.jsx)(t.code,{children:"ORG_ID/AWSLogs/ORG_ID"}),", where ",(0,a.jsx)(t.code,{children:"ORG_ID"})," is the AWS organization ID. For single-account trails, use the default prefix ",(0,a.jsx)(t.code,{children:"AWSLogs/"}),". Verify the prefix using the AWS CLI command: ",(0,a.jsx)(t.code,{children:"aws cloudtrail describe-trails --trail-name-list TRAIL_NAME"}),". If a custom prefix is used, append it to the default prefix (e.g., ",(0,a.jsx)(t.code,{children:"PREFIX/ORG_ID/AWSLogs/ORG_ID"}),")."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/athena/latest/ug/query-results-specify-location.html",children:"Set Up Athena Query Result Location"})}),": Ensure an S3 bucket is configured in Athena for query results. Specify this bucket (without the ",(0,a.jsx)(t.code,{children:"s3://"})," prefix) in the CloudFormation template to store query outputs."]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{title:"Automate with GitHub Solution",type:"tip",children:(0,a.jsxs)(t.p,{children:[(0,a.jsxs)(t.strong,{children:["Access ",(0,a.jsx)(t.a,{href:"https://github.com/aws-samples/sample-automation-cloudtrail-athena",children:"CloudTrail Athena Automation Scripts"})]})," on GitHub to deploy the CloudFormation template and streamline your CloudTrail log analysis with partitioned Athena tables."]})}),"\n",(0,a.jsx)(t.h2,{id:"use-account-specific-and-consolidated-tables-for-flexible-analysis",children:"Use Account-Specific and Consolidated Tables for Flexible Analysis"}),"\n",(0,a.jsx)(t.p,{children:"The solution creates two types of Athena tables to support different use cases:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Account-Specific Tables"}),": The ",(0,a.jsx)(t.code,{children:"CloudTrailLogsPartitionedByAccount"})," Lambda function creates dedicated Athena tables (e.g., ",(0,a.jsx)(t.code,{children:"trail_123456789012"}),") for each AWS account discovered in the CloudTrail S3 bucket. These tables are partitioned by region and date, enabling teams to analyze logs specific to their account without scanning irrelevant data. This is particularly useful for security teams investigating account-specific incidents or operational teams troubleshooting regional activities."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Consolidated Organization-Wide Table"}),": The ",(0,a.jsx)(t.code,{children:"CloudTrailLogsPartitionedAllAccounts"})," Lambda function maintains a unified table (e.g., ",(0,a.jsx)(t.code,{children:"all_accounts_trail"}),") containing logs from all accounts in the AWS organization, partitioned by account ID, region, and date. This table supports cross-account investigations and organization-wide audits, allowing security administrators to query activity across the entire environment efficiently."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Both functions use partition projection to automatically include new accounts and partitions as the organization evolves, eliminating the need for manual updates. Configure these tables to deliver logs to a centralized S3 bucket in a separate security boundary with restricted access to enforce strict security controls and segregation of duties."}),"\n",(0,a.jsx)(t.h2,{id:"enable-daily-table-updates-for-synchronization",children:"Enable Daily Table Updates for Synchronization"}),"\n",(0,a.jsx)(t.p,{children:"To ensure Athena tables remain synchronized with the AWS organization\u2019s structure, configure the Lambda functions to execute daily updates. These updates detect new accounts and create corresponding partitions, ensuring that logs from newly added accounts or regions are included in the Athena tables. This automation reduces administrative overhead and ensures comprehensive log coverage, supporting compliance requirements such as FedRAMP or PCI-DSS that mandate continuous monitoring of account activity."}),"\n",(0,a.jsx)(t.h2,{id:"leverage-predefined-queries-for-common-use-cases",children:"Leverage Predefined Queries for Common Use Cases"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"https://github.com/awslabs/aws-security-analytics-bootstrap/blob/main/AWSSecurityAnalyticsBootstrap/sql/dml/analytics/cloudtrail/cloudtrail_demo_queries.sql",children:"Include predefined Athena queries in the solution to address common security and operational scenarios"})}),". For example, the \u201cFind most frequent console users\u201d query analyzes AWS console login frequency by user, helping identify potential unauthorized access. These queries serve as templates for custom queries, allowing teams to tailor investigations to specific needs. Store predefined queries in the Athena console\u2019s Saved Queries section for easy access and execution."]}),"\n",(0,a.jsx)(t.admonition,{title:"Access Saved Security Queries",type:"note",children:(0,a.jsxs)(t.p,{children:[(0,a.jsxs)(t.strong,{children:["Explore ",(0,a.jsx)(t.a,{href:"https://github.com/awslabs/aws-security-analytics-bootstrap/blob/main/AWSSecurityAnalyticsBootstrap/sql/dml/analytics/cloudtrail/cloudtrail_demo_queries.sql",children:"AWS CloudTrail Athena Demo Queries"})]})," on GitHub to use pre-built Athena queries for common security scenarios like detecting unauthorized console access."]})}),"\n",(0,a.jsx)(t.h2,{id:"optimize-costs-with-partitioning-and-monitoring",children:"Optimize Costs with Partitioning and Monitoring"}),"\n",(0,a.jsx)(t.p,{children:"Partitioning CloudTrail logs reduces the amount of data scanned by Athena, directly lowering query costs. Additionally, implement the following cost management practices:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Monitor Lambda Function Costs"}),": The solution uses two Lambda functions, each invoked once daily. Monitor their runtime to estimate costs using the AWS Lambda pricing page. Adjust invocation frequency if needed to balance cost and update requirements."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Track Athena Query Costs"}),": Athena charges based on the amount of data scanned per query. Partitioning minimizes scanned data, but monitor query costs using the Amazon Athena pricing page. Use AWS Budgets to set cost thresholds and alerts for CloudTrail and Athena spending."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Use AWS Cost Anomaly Detection"}),": Configure AWS Cost Anomaly Detection to monitor CloudTrail and Athena spending. This service uses machine learning to detect unexpected cost spikes, enabling proactive cost management."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"clean-up-resources-to-avoid-unnecessary-costs",children:"Clean Up Resources to Avoid Unnecessary Costs"}),"\n",(0,a.jsx)(t.p,{children:"To prevent ongoing charges, delete the CloudFormation stack when the solution is no longer needed. This removes the Lambda functions, IAM roles, Glue database, and Athena tables, ensuring no residual costs are incurred. Regularly review AWS Budgets and Cost Anomaly Detection reports to identify and address any unexpected expenses related to the solution."}),"\n",(0,a.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(t.p,{children:"Automating partitioned Athena tables for CloudTrail logs optimizes query performance, reduces costs, and enhances security and compliance investigations. By deploying account-specific and organization-wide tables, enabling daily updates, and securing the S3 bucket, this solution provides a scalable and efficient approach to CloudTrail log analysis. Integrating with CloudWatch Logs and leveraging predefined queries further streamlines investigations, while cost management practices ensure affordability. Implement this solution to achieve faster, cost-effective, and secure analysis of CloudTrail logs, supporting governance, compliance, and operational excellence in your AWS environment."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(6540);const a={},o=i.createContext(a);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);