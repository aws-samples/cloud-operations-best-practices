"use strict";(self.webpackChunkaws_cloud_operations_best_practices=self.webpackChunkaws_cloud_operations_best_practices||[]).push([[596],{5720:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/jitna-organization-64cb59e83f286b5e8474226af4a6cb25.png"},6649:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"recipes/centralized-operations-management/just-in-time-node-access/enable-using-iac","title":"Enable JITNA using Infrastructure-as-Code (IaC)","description":"The following section describes how to deploy just-in-time node access using CloudFormation in an AWS Organization. To deploy just-in-time node access, you must first enable just-in-time node access for your environment and then you can deploy just-in-time node access resources which include approval policies, session preferences, and notification configurations.","source":"@site/docs/recipes/centralized-operations-management/just-in-time-node-access/enable-using-iac.md","sourceDirName":"recipes/centralized-operations-management/just-in-time-node-access","slug":"/recipes/centralized-operations-management/just-in-time-node-access/enable-using-iac","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/just-in-time-node-access/enable-using-iac","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Just-in-time node access (JITNA)","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/just-in-time-node-access/"},"next":{"title":"EventBridge integration with JITNA","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/just-in-time-node-access/event-driven-requests"}}');var s=i(4848),a=i(8453);const o={sidebar_position:2},r="Enable JITNA using Infrastructure-as-Code (IaC)",c={},d=[{value:"Enable just-in-time node access",id:"enable-just-in-time-node-access",level:2},{value:"Deploy Quick Setup configuration managers",id:"deploy-quick-setup-configuration-managers",level:3},{value:"Sample CloudFormation template",id:"sample-cloudformation-template",level:4},{value:"CloudFormation template parameters",id:"cloudformation-template-parameters",level:5}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"enable-jitna-using-infrastructure-as-code-iac",children:"Enable JITNA using Infrastructure-as-Code (IaC)"})}),"\n",(0,s.jsx)(n.p,{children:"The following section describes how to deploy just-in-time node access using CloudFormation in an AWS Organization. To deploy just-in-time node access, you must first enable just-in-time node access for your environment and then you can deploy just-in-time node access resources which include approval policies, session preferences, and notification configurations."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"The Systems Manager unified console and just-in-time node access can also be enabled on a per account/Region basis by performing local deployments rather than by enabling the features within the delegated administrator account."})}),"\n",(0,s.jsx)(n.h2,{id:"enable-just-in-time-node-access",children:"Enable just-in-time node access"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"In the AWS management account for your organization, specify a delegated administrator account for Systems Manager."}),"\n",(0,s.jsxs)(n.li,{children:["Deploy the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-organizations.html",children:"Systems Manager unified console"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Deploy ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-just-in-time-node-access.html",children:"Just-in-time node access"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example architecture diagram for deploying Quick Setup configuration managers for the unified console and just-in-time node access."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Example architecture diagram for deploying Quick Setup configuration managers for the unified console and just-in-time node access",src:i(5720).A+"",title:"Just-in-time node access architecture diagram",width:"1803",height:"1853"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a CloudFormation stack within the delegated administrator account for Systems Manager."}),"\n",(0,s.jsx)(n.li,{children:"The CloudFormation stack creates Quick Setup configuration managers."}),"\n",(0,s.jsx)(n.li,{children:"The Quick Setup configuration manager for the unified console is deployed to all OUs in the organization, A, B, and C."}),"\n",(0,s.jsx)(n.li,{children:"The Quick Setup configuration manager for JITNA is deployed into OUs A and B."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Just-in-time node access can either be enabled across your AWS Organization or for specific Organizational Units (OUs) within the organization. Deployable Regions for just-in-time node access include all Regions you have enabled for the Systems Manager unified console. You cannot enable JITNA for Regions where the unified console is not enabled."})}),"\n",(0,s.jsx)(n.h3,{id:"deploy-quick-setup-configuration-managers",children:"Deploy Quick Setup configuration managers"}),"\n",(0,s.jsx)(n.p,{children:"To enable just-in-time node access using infrastructure-as-code (IaC), you need to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Deploy Quick Setup IAM service roles.","\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For more information on IAM service roles for Quick Setup, see ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-getting-started.html#quick-setup-api-manual-onboarding",children:"Manual onboarding for working with Quick Setup API programatically"}),"."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Deploy two ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html",children:"Quick Setup Configuration Managers"}),":","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Systems Manager unified console."}),"\n",(0,s.jsx)(n.li,{children:"Systems Manager just-in-time-node access."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The following example CloudFormation template includes creating the two required Quick Setup IAM service roles and deploys the two Quick Setup configuration managers for the Systems Manager unified console and JITNA."}),"\n",(0,s.jsx)(n.h4,{id:"sample-cloudformation-template",children:"Sample CloudFormation template"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/aws-samples/cloud-operations-best-practices/blob/main/cloud-operations-best-practices/static/cfn-templates/just-in-time-node-access/just-in-time-quick-setup-cfn-template.yaml",children:"Just-in-time node access sample CFN template"})}),"\n",(0,s.jsx)(n.h5,{id:"cloudformation-template-parameters",children:"CloudFormation template parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter Name"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Example value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DelegatedAdminAccountId"})}),(0,s.jsx)(n.td,{children:"AWS Account ID for the Systems Manager delegated administrator account."}),(0,s.jsx)(n.td,{children:"123456789012"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HomeRegion"})}),(0,s.jsx)(n.td,{children:"AWS Region where the Systems Manager unified console is deployed."}),(0,s.jsx)(n.td,{children:"us-east-1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"IdentityProviderSetting"})}),(0,s.jsx)(n.td,{children:"Specifies identity provider IAM Identity Access Management (IAM) or Single Sign-On (SSO) used for determining who is the current access control template approver."}),(0,s.jsx)(n.td,{children:"IAM"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"JITNATargetOrganizationalUnits"})}),(0,s.jsx)(n.td,{children:"Comma-separated list of AWS Organization Unit IDs where just-in-time node access is set up."}),(0,s.jsx)(n.td,{children:"ou-a1b2-abcd1234,ou-a1b2-efgh1234,ou-a1b2-hijk1234"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"JITNATargetRegions"})}),(0,s.jsxs)(n.td,{children:["The Regions where you want to enable just-in-time node access. The Regions specified must either match the Regions specified in the parameter ",(0,s.jsx)(n.code,{children:"UnifiedConsoleTargetRegions"})," or must be a subset of Regions specified in the parameter ",(0,s.jsx)(n.code,{children:"UnifiedConsoleTargetRegions"}),"."]}),(0,s.jsx)(n.td,{children:"us-east-1,us-east-2,us-west-2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UnifiedConsoleRootOrganizationUnitID"})}),(0,s.jsx)(n.td,{children:"The root AWS Organization unit ID."}),(0,s.jsx)(n.td,{children:"r-abcd"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UnifiedConsoleTargetRegions"})}),(0,s.jsx)(n.td,{children:"Comma-separated list of AWS Regions where the Systems Manager unified console is set up. Data is aggregated from these Regions and replicated to your home Region."}),(0,s.jsx)(n.td,{children:"us-east-1,us-east-2,us-west-2"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);