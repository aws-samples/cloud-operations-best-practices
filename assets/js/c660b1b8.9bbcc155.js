"use strict";(self.webpackChunkaws_cloud_operations_best_practices=self.webpackChunkaws_cloud_operations_best_practices||[]).push([[4939],{1303:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"recipes/centralized-operations-management/just-in-time-node-access/policy-examples","title":"JITNA Cedar policy examples","description":"This section contains a collection of samples of policy examples when using Systems Manager just-in-time node access (JITNA). The samples are designed to educate AWS customers on how to implement Cedar policies to permit or forbid automatic access to just-in-time node session requests.","source":"@site/docs/recipes/centralized-operations-management/just-in-time-node-access/policy-examples.md","sourceDirName":"recipes/centralized-operations-management/just-in-time-node-access","slug":"/recipes/centralized-operations-management/just-in-time-node-access/policy-examples","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/just-in-time-node-access/policy-examples","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"EventBridge integration with JITNA","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/just-in-time-node-access/event-driven-requests"},"next":{"title":"Invoking PowerShell commands as a custom Windows user in Systems Manager Run Command","permalink":"/cloud-operations-best-practices/docs/recipes/centralized-operations-management/pwsh-run-command-custom-credentials/"}}');var o=t(4848),i=t(8453);const a={sidebar_position:4},r="JITNA Cedar policy examples",c={},d=[{value:"Permit automatic access to production nodes for the on-call IDC group",id:"permit-automatic-access-to-production-nodes-for-the-on-call-idc-group",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"jitna-cedar-policy-examples",children:"JITNA Cedar policy examples"})}),"\n",(0,o.jsx)(n.p,{children:"This section contains a collection of samples of policy examples when using Systems Manager just-in-time node access (JITNA). The samples are designed to educate AWS customers on how to implement Cedar policies to permit or forbid automatic access to just-in-time node session requests."}),"\n",(0,o.jsxs)(n.p,{children:["For more information on the schema for just-in-time node access, see ",(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/auto-approval-deny-access-policy-statement-structure.html",children:"Statement structure and built-in operators for auto-approval and deny-access policies"}),". Learn more about authoring Cedar policies in the ",(0,o.jsx)(n.a,{href:"https://www.cedarpolicy.com/en/playground",children:"Cedar playground"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Please keep in mind that this is sample code and should be thoroughly tested and validated in a development environment prior to any usage in a production environment."}),"\n",(0,o.jsx)(n.h2,{id:"permit-automatic-access-to-production-nodes-for-the-on-call-idc-group",children:"Permit automatic access to production nodes for the on-call IDC group"}),"\n",(0,o.jsx)(n.p,{children:"The following example permits automatic access for:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Any identity to development nodes, identified by the tag key-value pair ",(0,o.jsx)(n.code,{children:"Environment:DEV"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Users in the AWS Identity Center (IDC) group ",(0,o.jsx)(n.strong,{children:"OnCall"})," to access production nodes, identified by the tag key-value pair ",(0,o.jsx)(n.code,{children:"Environment:PROD"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-language=cedar",children:'// Permit automatic access to DEV nodes\npermit (principal, \n      action == AWS::SSM::Action::"getTokenForInstanceAccess", \n      resource)\n    when {\n    resource.hasTag("Environment") && \n    resource.getTag("Environment") == "DEV"\n    };\n\n// Permit automatic access to PROD nodes for OnCall users\n// OnCall IDC Group ID: 34688438-1061-702c-a03d-1fa788dccfd1\npermit (principal in AWS::IdentityStore::Group::"34688438-1061-702c-a03d-1fa788dccfd1", \n      action == AWS::SSM::Action::"getTokenForInstanceAccess", \n      resource)\n    when {\n    resource.hasTag("Environment") && \n    resource.getTag("Environment") == "PROD"\n    };\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);